{"version":3,"sources":["NotesItem.js","App.js","index.js"],"names":["NotesItem","props","className","rows","cols","placeholder","value","notesTitle","onChange","onNotesTitleInput","notesContent","onNotesDetailInput","onNotesDate","notesDate","onClick","onSaveClick","App","handleTitleInputChange","event","target","setState","handleDetailInputChange","notesDetail","handleDateInputChange","date","Date","toLocaleDateString","handleSaveClick","e","preventDefault","state","note","notesTitleText","notesDetailText","notesDateInput","notesCloned","notes","slice","push","window","localStorage","setItem","JSON","stringify","console","log","getItem","parse","src","alt","this","map","i","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAkCeA,EAlCG,SAACC,GACjB,OACE,sBAAKC,UAAU,YAAf,UACE,0BACEC,KAAK,IACLC,KAAK,KACLC,YAAY,cACZC,MAAOL,EAAMM,WACbC,SAAUP,EAAMQ,oBAElB,sBAAKP,UAAU,eAAf,UACE,kDACA,iCACE,mBAAGA,UAAU,qBAIjB,0BACEC,KAAK,IACLC,KAAK,KACLC,YAAY,eACZC,MAAOL,EAAMS,aACbF,SAAUP,EAAMU,qBAElB,qBAAKT,UAAU,cAAf,SACE,uBAAOM,SAAUP,EAAMW,YAAvB,SAAqCX,EAAMY,cAE7C,wBAAQX,UAAU,OAAOY,QAASb,EAAMc,YAAxC,2BCoESC,E,kDA5Fb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAgBRgB,uBAAyB,SAACC,GACxB,IAAMZ,EAAQY,EAAMC,OAAOb,MAC3B,EAAKc,SAAS,CACZb,WAAYD,KApBG,EAuBnBe,wBAA0B,SAACH,GACzB,IAAMZ,EAAQY,EAAMC,OAAOb,MAC3B,EAAKc,SAAS,CACZE,YAAahB,KA1BE,EA6BnBiB,sBAAwB,SAACL,GACvB,IAAMM,EAAO,IAAIC,KACjB,EAAKL,SAAS,CACZP,UAAWW,EAAKE,wBAhCD,EAmCnBC,gBAAkB,SAACC,GAEjB,GADAA,EAAEC,iBAC4B,KAA1B,EAAKC,MAAMvB,YAAgD,KAA3B,EAAKuB,MAAMR,YAAoB,CACjE,IAGMS,EAAO,CACXC,eAJiB,EAAKF,MAAMvB,WAK5B0B,gBAJkB,EAAKH,MAAMR,YAK7BY,eAJgB,EAAKJ,MAAMjB,WAMvBsB,EAAc,EAAKL,MAAMM,MAAMC,QACrCF,EAAYG,KAAKP,GACjBQ,OAAOC,aAAaC,QAAQ,QAASC,KAAKC,UAAUR,IACpD,EAAKf,SAAS,CACZgB,MAAOD,EACP5B,WAAY,GACZe,YAAa,GACbT,UAAW,KAGf+B,QAAQC,IAAI,QAtDZ,EAAKf,MAAQ,CACXvB,WAAY,GACZe,YAAa,GACbT,UAAW,GACXuB,MAAOG,OAAOC,aAAaM,QAAQ,SAC/BJ,KAAKK,MAAMR,OAAOC,aAAaM,QAAQ,UACvC,CACE,CACEd,eAAgB,QAChBC,gBAAiB,KACjBpB,UAAW,gBAZJ,E,0CA0DnB,WAAU,IAAD,OACP,OACE,qBAAKX,UAAU,YAAf,SACE,iCACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAK8C,IAAI,WAAWC,IAAI,WAE1B,oBAAI/C,UAAU,WAAd,uCACA,wBAAQA,UAAU,YAAlB,SACE,mBAAGA,UAAU,8CAGjB,qBAAKA,UAAU,aAAf,SACGgD,KAAKpB,MAAMM,MAAMe,KAAI,SAACpB,EAAMqB,GAC3B,OACE,cAAC,EAAD,CAEE7C,WAAYwB,EAAKC,eACjBtB,aAAcqB,EAAKE,gBACnBpB,UAAWkB,EAAKG,eAChBzB,kBAAmB,EAAKQ,uBACxBN,mBAAoB,EAAKU,wBACzBT,YAAa,EAAKW,sBAClBR,YAAa,EAAKY,iBAPbyB,iB,GA5ELC,aCGlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bad574cc.chunk.js","sourcesContent":["const NotesItem = (props) => {\r\n  return (\r\n    <div className=\"notes new\">\r\n      <textarea\r\n        rows=\"2\"\r\n        cols=\"10\"\r\n        placeholder=\" Note Title\"\r\n        value={props.notesTitle}\r\n        onChange={props.onNotesTitleInput}\r\n      />\r\n      <div className=\"edit-del-btn\">\r\n        <button>✍️</button>\r\n        <button>\r\n          <i className=\"fa fa-trash\" />\r\n        </button>\r\n      </div>\r\n\r\n      <textarea\r\n        rows=\"8\"\r\n        cols=\"10\"\r\n        placeholder=\"Note Content\"\r\n        value={props.notesContent}\r\n        onChange={props.onNotesDetailInput}\r\n      />\r\n      <div className=\"note-footer\">\r\n        <small onChange={props.onNotesDate}>{props.notesDate}</small>\r\n      </div>\r\n      <button className=\"save\" onClick={props.onSaveClick}>\r\n        Save Note\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesItem;\r\n","import React, { Component } from \"react\";\nimport NotesItem from \"./NotesItem\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notesTitle: \"\",\n      notesDetail: \"\",\n      notesDate: \"\",\n      notes: window.localStorage.getItem(\"items\")\n        ? JSON.parse(window.localStorage.getItem(\"items\"))\n        : [\n            {\n              notesTitleText: \"hello\",\n              notesDetailText: \"hy\",\n              notesDate: \"12/12/1234\",\n            },\n          ],\n    };\n  }\n  handleTitleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      notesTitle: value,\n    });\n  };\n  handleDetailInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      notesDetail: value,\n    });\n  };\n  handleDateInputChange = (event) => {\n    const date = new Date();\n    this.setState({\n      notesDate: date.toLocaleDateString(),\n    });\n  };\n  handleSaveClick = (e) => {\n    e.preventDefault();\n    if (this.state.notesTitle !== \"\" && this.state.notesDetail !== \"\") {\n      const notesTitle = this.state.notesTitle;\n      const notesDetail = this.state.notesDetail;\n      const notesDate = this.state.notesDate;\n      const note = {\n        notesTitleText: notesTitle,\n        notesDetailText: notesDetail,\n        notesDateInput: notesDate,\n      };\n      const notesCloned = this.state.notes.slice();\n      notesCloned.push(note);\n      window.localStorage.setItem(\"items\", JSON.stringify(notesCloned));\n      this.setState({\n        notes: notesCloned,\n        notesTitle: \"\",\n        notesDetail: \"\",\n        notesDate: \"\",\n      });\n    }\n    console.log(\"hey\");\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <form>\n          <div className=\"header\">\n            <div className=\"logo col-lg-4\">\n              <img src=\"logo.png\" alt=\"logo\" />\n            </div>\n            <h4 className=\"col-lg-4\">Add Your New Notes Here: </h4>\n            <button className=\"add-click\">\n              <i className=\"fa fa-plus-square add-notes col-lg-4\" />\n            </button>\n          </div>\n          <div className=\"note-lists\">\n            {this.state.notes.map((note, i) => {\n              return (\n                <NotesItem\n                  key={i}\n                  notesTitle={note.notesTitleText}\n                  notesContent={note.notesDetailText}\n                  notesDate={note.notesDateInput}\n                  onNotesTitleInput={this.handleTitleInputChange}\n                  onNotesDetailInput={this.handleDetailInputChange}\n                  onNotesDate={this.handleDateInputChange}\n                  onSaveClick={this.handleSaveClick}\n                />\n              );\n            })}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}