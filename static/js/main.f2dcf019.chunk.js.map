{"version":3,"sources":["NotesItem.js","App.js","index.js"],"names":["NotesItem","props","className","placeholder","value","notesTitle","onChange","onNotesTitleInput","notesContent","onNotesDetailInput","onClick","onDeleteClick","notesDate","length","onSaveClick","App","handleTitleInputChange","event","target","setState","handleDetailInputChange","notesDetail","handleSaveClick","e","preventDefault","state","note","notesTitleText","notesDetailText","notesDateInput","Date","toLocaleDateString","notesCloned","notes","slice","push","showNoteAddInput","handleRemoveNotes","index","splice","console","log","window","localStorage","setItem","JSON","stringify","toggleAddInput","handleSearchInputChange","searchInput","searchnotes","filter","toLowerCase","includes","getItem","parse","prevProps","prevState","this","filtered","src","alt","type","id","map","i","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2dcf019.chunk.js","sourcesContent":["const NotesItem = (props) => {\r\n  return (\r\n    <div className=\"notes\">\r\n      <input\r\n        placeholder=\" Note Title\"\r\n        value={props.notesTitle}\r\n        onChange={props.onNotesTitleInput}\r\n      />\r\n      <textarea\r\n        placeholder=\"Note Content\"\r\n        value={props.notesContent}\r\n        onChange={props.onNotesDetailInput}\r\n      />\r\n      <div className=\"edit-del-btn\">\r\n        <button>✍️</button>\r\n\r\n        <button onClick={props.onDeleteClick}>\r\n          <i className=\"fa fa-trash\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"note-footer\">\r\n        <small className=\"notes-date\">{props.notesDate} </small>\r\n        <p className=\"remaining-length\">\r\n          {300 - props.notesContent.length + \" Remaining\"}\r\n        </p>\r\n      </div>\r\n\r\n      <button className=\"save\" onClick={props.onSaveClick}>\r\n        Save Note\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesItem;\r\n","import React, { Component } from \"react\";\r\nimport NotesItem from \"./NotesItem\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notesTitle: \"\",\r\n      notesDetail: \"\",\r\n      notesDate: \"\",\r\n      searchInput: \"\",\r\n      notes: window.localStorage.getItem(\"items\")\r\n        ? JSON.parse(window.localStorage.getItem(\"items\"))\r\n        : [],\r\n\r\n      showNoteAddInput: false,\r\n    };\r\n  }\r\n  handleTitleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      notesTitle: value,\r\n    });\r\n  };\r\n  handleDetailInputChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value.length <= 300) {\r\n      this.setState({\r\n        notesDetail: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSaveClick = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.notesTitle !== \"\" && this.state.notesDetail !== \"\") {\r\n      const notesTitle = this.state.notesTitle;\r\n      const notesDetail = this.state.notesDetail;\r\n      const notesDate = new Date();\r\n      const note = {\r\n        notesTitleText: notesTitle,\r\n        notesDetailText: notesDetail,\r\n        notesDateInput: notesDate.toLocaleDateString(),\r\n        // editMode: false,\r\n      };\r\n      const notesCloned = this.state.notes.slice();\r\n      notesCloned.push(note);\r\n      this.setState({\r\n        notes: notesCloned,\r\n        notesTitle: \"\",\r\n        notesDetail: \"\",\r\n        notesDate: \"\",\r\n        showNoteAddInput: false,\r\n      });\r\n    }\r\n  };\r\n  handleRemoveNotes = (index) => {\r\n    const notesCloned = this.state.notes.slice();\r\n    notesCloned.splice(index, 1);\r\n    this.setState({\r\n      notes: notesCloned,\r\n    });\r\n    console.log(\"hey\");\r\n    window.localStorage.setItem(\"items\", JSON.stringify(notesCloned));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.notes !== this.state.notes) {\r\n      window.localStorage.setItem(\"items\", JSON.stringify(this.state.notes));\r\n    }\r\n  }\r\n\r\n  toggleAddInput = () => {\r\n    this.setState((state) => ({ showNoteAddInput: !state.showNoteAddInput }));\r\n  };\r\n  handleSearchInputChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      searchInput: value,\r\n    });\r\n  };\r\n  searchnotes = () => {\r\n    return this.state.notes.filter((note) => {\r\n      return note.notesTitleText\r\n        .toLowerCase()\r\n        .includes(this.state.searchInput.toLowerCase());\r\n    });\r\n  };\r\n  /* handleEditMode = (index) => {\r\n    const notesCloned = this.state.notes.slice();\r\n    const prevEditMode = notesCloned[index].editMode;\r\n    notesCloned[index].editMode = !prevEditMode;\r\n\r\n    this.setState({\r\n      notes: notesCloned,\r\n    });\r\n    console.log(\"hey\");\r\n  };\r\n\r\n  handleEditNoteChange = (event, index) => {\r\n    const notesCloned = this.state.notes.slice();\r\n    const title = event.target.value;\r\n    const detail = event.target.value;\r\n    notesCloned[index].notesTitleText = title;\r\n    notesCloned[index].notesDetailText = detail;\r\n    this.setState({\r\n      notes: notesCloned,\r\n    });\r\n  }; */\r\n\r\n  render() {\r\n    const filtered = this.searchnotes();\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <div className=\"header\">\r\n            <div className=\"logo col-lg-4\">\r\n              <img src=\"logo.png\" alt=\"logo\" />\r\n            </div>\r\n            <h4 className=\"col-lg-4\">Add Your New Notes Here: </h4>\r\n            <button\r\n              type=\"button\"\r\n              className=\"add-click\"\r\n              onClick={this.toggleAddInput}\r\n            >\r\n              <i className=\"fa fa-plus-square add-notes col-lg-4\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"search-div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control \"\r\n              placeholder=\"Search your todos....\"\r\n              id=\"searchInput\"\r\n              onChange={this.handleSearchInputChange}\r\n              value={this.state.searchInput}\r\n            />\r\n          </div>\r\n          {this.state.showNoteAddInput ? (\r\n            <NotesItem\r\n              notesTitle={this.state.notesTitle}\r\n              notesContent={this.state.notesDetail}\r\n              notesDate={this.state.notesDate}\r\n              onNotesTitleInput={this.handleTitleInputChange}\r\n              onNotesDetailInput={this.handleDetailInputChange}\r\n              onSaveClick={this.handleSaveClick}\r\n            />\r\n          ) : null}\r\n          <div className=\"note-lists\">\r\n            {filtered.map((note, i) => {\r\n              return (\r\n                <NotesItem\r\n                  key={i}\r\n                  notesTitle={note.notesTitleText}\r\n                  notesContent={note.notesDetailText}\r\n                  notesDate={note.notesDateInput}\r\n                  // onNotesTitleInput={this.handleTitleInputChange}\r\n                  // onNotesDetailInput={this.handleDetailInputChange}\r\n                  // onSaveClick={this.handleSaveClick}\r\n                  onDeleteClick={() => {\r\n                    this.handleRemoveNotes(i);\r\n                  }}\r\n                  // editMode={note.editMode}\r\n                  // onEditMode={() => {\r\n                  //   this.handleEditMode(i);\r\n                  // }}\r\n                  // onEditNoteChange={(e) => {\r\n                  //   this.handleEditNoteChange(e, i);\r\n                  // }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}